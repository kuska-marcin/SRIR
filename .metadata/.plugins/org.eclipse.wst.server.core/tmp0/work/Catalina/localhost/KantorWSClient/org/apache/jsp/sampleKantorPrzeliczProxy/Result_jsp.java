/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-01-13 23:03:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sampleKantorPrzeliczProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>WYNIK</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<H3>WYNIKI</H3>\r\n");
      out.write("\r\n");
      kantor.com.web.service.KantorPrzeliczProxy sampleKantorPrzeliczProxyid = null;
      synchronized (session) {
        sampleKantorPrzeliczProxyid = (kantor.com.web.service.KantorPrzeliczProxy) _jspx_page_context.getAttribute("sampleKantorPrzeliczProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (sampleKantorPrzeliczProxyid == null){
          sampleKantorPrzeliczProxyid = new kantor.com.web.service.KantorPrzeliczProxy();
          _jspx_page_context.setAttribute("sampleKantorPrzeliczProxyid", sampleKantorPrzeliczProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');

if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
sampleKantorPrzeliczProxyid.setEndpoint(request.getParameter("endpoint"));

      out.write("\r\n");
      out.write("\r\n");

String method = request.getParameter("method");
int methodID = 0;
if (method == null) methodID = -1;

if(methodID != -1) methodID = Integer.parseInt(method);
boolean gotMethod = false;

try {
switch (methodID){ 
case 2:
        gotMethod = true;
        java.lang.String getEndpoint2mtemp = sampleKantorPrzeliczProxyid.getEndpoint();
if(getEndpoint2mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getEndpoint2mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getEndpoint2mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp3 );
      out.write("\r\n");
      out.write("        ");

}
break;
case 5:
        gotMethod = true;
        String endpoint_0id=  request.getParameter("endpoint8");
            java.lang.String endpoint_0idTemp = null;
        if(!endpoint_0id.equals("")){
         endpoint_0idTemp  = endpoint_0id;
        }
        sampleKantorPrzeliczProxyid.setEndpoint(endpoint_0idTemp);
break;
case 10:
        gotMethod = true;
        kantor.com.web.service.KantorPrzelicz getKantorPrzelicz10mtemp = sampleKantorPrzeliczProxyid.getKantorPrzelicz();
if(getKantorPrzelicz10mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getKantorPrzelicz10mtemp );
      out.write('\r');
      out.write('\n');

}else{
        if(getKantorPrzelicz10mtemp!= null){
        String tempreturnp11 = getKantorPrzelicz10mtemp.toString();
        
      out.write("\r\n");
      out.write("        ");
      out.print(tempreturnp11);
      out.write("\r\n");
      out.write("        ");

        }}
break;
case 13:
        gotMethod = true;
        String value_1id=  request.getParameter("value16");
        double value_1idTemp  = Double.parseDouble(value_1id);
        double USDnaPLN13mtemp = sampleKantorPrzeliczProxyid.USDnaPLN(value_1idTemp);
        String tempResultreturnp14 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(USDnaPLN13mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp14 );
      out.print("PLN");
      out.write("\r\n");
      out.write("        ");

break;
case 18:
        gotMethod = true;
        double[] pobierz_kursy_walut18mtemp = sampleKantorPrzeliczProxyid.pobierz_kursy_walut();
if(pobierz_kursy_walut18mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(pobierz_kursy_walut18mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempreturnp19 = "[";        for(int ireturnp19=0;ireturnp19< pobierz_kursy_walut18mtemp.length;ireturnp19++){
            tempreturnp19 = tempreturnp19 + pobierz_kursy_walut18mtemp[ireturnp19] + ",";
        }
        int lengthreturnp19 = tempreturnp19.length();
        tempreturnp19 = tempreturnp19.substring(0,(lengthreturnp19 - 1)) + "]";
        
      out.write("\r\n");
      out.write("        <h8>");
      out.print(tempreturnp19);
      out.write("</h8>\r\n");
      out.write("        ");

}
break;
case 21:
        gotMethod = true;
        String value_2id=  request.getParameter("value24");
        double value_2idTemp  = Double.parseDouble(value_2id);
        double EURnaPLN21mtemp = sampleKantorPrzeliczProxyid.EURnaPLN(value_2idTemp);
        String tempResultreturnp22 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(EURnaPLN21mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp22 );
      out.print(" PLN");
      out.write("\r\n");
      out.write("        ");

break;
case 26:
        gotMethod = true;
        String value_3id=  request.getParameter("value29");
        double value_3idTemp  = Double.parseDouble(value_3id);
        double PLNnaUSD26mtemp = sampleKantorPrzeliczProxyid.PLNnaUSD(value_3idTemp);
        String tempResultreturnp27 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(PLNnaUSD26mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp27 );
      out.print(" USD");
      out.write("\r\n");
      out.write("        ");

break;
case 31:
        gotMethod = true;
        String value_4id=  request.getParameter("value34");
        double value_4idTemp  = Double.parseDouble(value_4id);
        double PLNnaEUR31mtemp = sampleKantorPrzeliczProxyid.PLNnaEUR(value_4idTemp);
        String tempResultreturnp32 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(PLNnaEUR31mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp32 );
      out.print(" EUR");
      out.write("\r\n");
      out.write("        ");

break;
case 36:
        gotMethod = true;
        String value_5id=  request.getParameter("value39");
        double value_5idTemp  = Double.parseDouble(value_5id);
        double JPYnaPLN36mtemp = sampleKantorPrzeliczProxyid.JPYnaPLN(value_5idTemp);
        String tempResultreturnp37 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(JPYnaPLN36mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp37 );
      out.print(" PLN");
      out.write("\r\n");
      out.write("        ");

break;
case 41:
        gotMethod = true;
        String value_6id=  request.getParameter("value44");
        double value_6idTemp  = Double.parseDouble(value_6id);
        double PLNnaGBP41mtemp = sampleKantorPrzeliczProxyid.PLNnaGBP(value_6idTemp);
        String tempResultreturnp42 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(PLNnaGBP41mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp42 );
      out.print(" GBP");
      out.write("\r\n");
      out.write("        ");

break;
case 46:
        gotMethod = true;
        String value_7id=  request.getParameter("value49");
        double value_7idTemp  = Double.parseDouble(value_7id);
        double RUBnaPLN46mtemp = sampleKantorPrzeliczProxyid.RUBnaPLN(value_7idTemp);
        String tempResultreturnp47 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(RUBnaPLN46mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp47 );
      out.print(" PLN");
      out.write("\r\n");
      out.write("        ");

break;
case 51:
        gotMethod = true;
        String value_8id=  request.getParameter("value54");
        double value_8idTemp  = Double.parseDouble(value_8id);
        double PLNnaRUB51mtemp = sampleKantorPrzeliczProxyid.PLNnaRUB(value_8idTemp);
        String tempResultreturnp52 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(PLNnaRUB51mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp52 );
      out.print(" RUB");
      out.write("\r\n");
      out.write("        ");

break;
case 56:
        gotMethod = true;
        String value_9id=  request.getParameter("value59");
        double value_9idTemp  = Double.parseDouble(value_9id);
        double PLNnaCHE56mtemp = sampleKantorPrzeliczProxyid.PLNnaCHE(value_9idTemp);
        String tempResultreturnp57 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(PLNnaCHE56mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp57 );
      out.print(" CHF");
      out.write("\r\n");
      out.write("        ");

break;
case 61:
        gotMethod = true;
        String value_10id=  request.getParameter("value64");
        double value_10idTemp  = Double.parseDouble(value_10id);
        double PLNnaJPY61mtemp = sampleKantorPrzeliczProxyid.PLNnaJPY(value_10idTemp);
        String tempResultreturnp62 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(PLNnaJPY61mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp62 );
      out.print(" JPY");
      out.write("\r\n");
      out.write("        ");

break;
case 66:
        gotMethod = true;
        String value_11id=  request.getParameter("value69");
        double value_11idTemp  = Double.parseDouble(value_11id);
        double CHEnaPLN66mtemp = sampleKantorPrzeliczProxyid.CHEnaPLN(value_11idTemp);
        String tempResultreturnp67 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(CHEnaPLN66mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp67 );
      out.print(" PLN");
      out.write("\r\n");
      out.write("        ");

break;
case 71:
        gotMethod = true;
        String value_12id=  request.getParameter("value74");
        double value_12idTemp  = Double.parseDouble(value_12id);
        double GBPnaPLN71mtemp = sampleKantorPrzeliczProxyid.GBPnaPLN(value_12idTemp);
        String tempResultreturnp72 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(GBPnaPLN71mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp72 );
      out.print(" PLN");
      out.write("\r\n");
      out.write("        ");

break;
}
} catch (Exception e) { 

      out.write("\r\n");
      out.write("<h4><B>Przepraszamy niestety w ten sposób programu nie zepsujesz :)</B></h4>\r\n");

return;
}
if(!gotMethod){

      out.write("\r\n");
      out.write("Kalkulacja waluty: N/A\r\n");

}

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
